import yfinance as yf
import pandas as pd

# Define the list of ticker symbols for multiple NSE stocks
ticker_symbols = [
 "360ONE.NS",
"AADHARHFC.NS",
"AARTIIND.NS",
"AAVAS.NS",
"ACE.NS",
"ABREL.NS",
"ABSLAMC.NS",
"AEGISLOG.NS",
"AFFLE.NS",
"AKUMS.NS",
"APLLTD.NS",
"ALKYLAMINE.NS",
"ALOKINDS.NS",
"ARE&M.NS",
"AMBER.NS",
"ANANDRATHI.NS",
"ANANTRAJ.NS",
"ANGELONE.NS",
"APARINDS.NS",
"APTUS.NS",
"ACI.NS",
"ASAHIINDIA.NS",
"ASTERDM.NS",
"ASTRAZEN.NS",
"ATUL.NS",
"AVANTIFEED.NS",
"BASF.NS",
"BEML.NS",
"BLS.NS",
"BALAMINES.NS",
"BALRAMCHIN.NS",
"BATAINDIA.NS",
"BIKAJI.NS",
"BIRLACORPN.NS",
"BSOFT.NS",
"BLUEDART.NS",
"BLUESTARCO.NS",
"BBTC.NS",
"BRIGADE.NS",
"MAPMYINDIA.NS",
"CCL.NS",
"CESC.NS",
"CIEINDIA.NS",
"CAMPUS.NS",
"CANFINHOME.NS",
"CAPLIPOINT.NS",
"CGCL.NS",
"CASTROLIND.NS",
"CEATLTD.NS",
"CELLO.NS",
"CENTRALBK.NS",
"CDSL.NS",
"CENTURYPLY.NS",
"CERA.NS",
"CHALET.NS",
"CHAMBLFERT.NS",
"CHEMPLASTS.NS",
"CHENNPETRO.NS",
"CHOLAHLDNG.NS",
"CUB.NS",
"CLEAN.NS",
"CAMS.NS",
"CONCORDBIO.NS",
"CRAFTSMAN.NS",
"CREDITACC.NS",
"CROMPTON.NS",
"CYIENT.NS",
"DOMS.NS",
"DATAPATTNS.NS",
"DEEPAKFERT.NS",
"DEVYANI.NS",
"LALPATHLAB.NS",
"EIDPARRY.NS",
"EIHOTEL.NS",
"EASEMYTRIP.NS",
"ELECON.NS",
"ELGIEQUIP.NS",
"EMCURE.NS",
"ENGINERSIN.NS",
"EQUITASBNK.NS",
"ERIS.NS",
"FINEORG.NS",
"FINCABLES.NS",
"FINPIPE.NS",
"FSL.NS",
"FIVESTAR.NS",
"GRINFRA.NS",
"GVT&D.NS",
"GRSE.NS",
"GILLETTE.NS",
"GLENMARK.NS",
"GODIGIT.NS",
"GPIL.NS",
"GODFRYPHLP.NS",
"GODREJAGRO.NS",
"GRANULES.NS",
"GRAPHITE.NS",
"GESHIP.NS",
"GAEL.NS",
"GMDCLTD.NS",
"GNFC.NS",
"GPPL.NS",
"GSFC.NS",
"GSPL.NS",
"HEG.NS",
"HBLENGINE.NS",
"HFCL.NS",
"HAPPSTMNDS.NS",
"HSCL.NS",
"HINDCOPPER.NS",
"HOMEFIRST.NS",
"HONASA.NS",
"ISEC.NS",
"IFCI.NS",
"IIFL.NS",
"INOXINDIA.NS",
"IRCON.NS",
"ITI.NS",
"INDGN.NS",
"INDIACEM.NS",
"INDIAMART.NS",
"IEX.NS",
"INOXWIND.NS",
"INTELLECT.NS",
"JBCHEPHARM.NS",
"JBMA.NS",
"JKLAKSHMI.NS",
"JKTYRE.NS",
"JMFINANCIL.NS",
"JPPOWER.NS",
"J&KBANK.NS",
"JINDALSAW.NS",
"JUBLINGREA.NS",
"JUBLPHARMA.NS",
"JWL.NS",
"JUSTDIAL.NS",
"JYOTHYLAB.NS",
"JYOTICNC.NS",
"KNRCON.NS",
"KSB.NS",
"KAJARIACER.NS",
"KPIL.NS",
"KANSAINER.NS",
"KARURVYSYA.NS",
"KAYNES.NS",
"KEC.NS",
"KFINTECH.NS",
"KIRLOSBROS.NS",
"KIRLOSENG.NS",
"KIMS.NS",
"LATENTVIEW.NS",
"LAURUSLABS.NS",
"LEMONTREE.NS",
"MMTC.NS",
"MGL.NS",
"MAHSEAMLES.NS",
"MAHLIFE.NS",
"MANAPPURAM.NS",
"MASTEK.NS",
"METROPOLIS.NS",
"MINDACORP.NS",
"MOTILALOFS.NS",
"MCX.NS",
"NATCOPHARM.NS",
"NBCC.NS",
"NCC.NS",
"NSLNISP.NS",
"NH.NS",
"NATIONALUM.NS",
"NAVINFLUOR.NS",
"NETWEB.NS",
"NETWORK18.NS",
"NEWGEN.NS",
"NUVAMA.NS",
"NUVOCO.NS",
"OLECTRA.NS",
"PCBL.NS",
"PNBHOUSING.NS",
"PNCINFRA.NS",
"PTCIL.NS",
"PVRINOX.NS",
"PFIZER.NS",
"PEL.NS",
"PPLPHARMA.NS",
"POLYMED.NS",
"PRAJIND.NS",
"QUESS.NS",
"RRKABEL.NS",
"RBLBANK.NS",
"RHIM.NS",
"RITES.NS",
"RADICO.NS",
"RAILTEL.NS",
"RAINBOW.NS",
"RAJESHEXPO.NS",
"RKFORGE.NS",
"RCF.NS",
"RATNAMANI.NS",
"RTNINDIA.NS",
"RAYMOND.NS",
"REDINGTON.NS",
"ROUTE.NS",
"SBFC.NS",
"SAMMAANCAP.NS",
"SANOFI.NS",
"SAPPHIRE.NS",
"SAREGAMA.NS",
"SCHNEIDER.NS",
"SCI.NS",
"RENUKA.NS",
"SHYAMMETL.NS",
"SIGNATURE.NS",
"SOBHA.NS",
"SONATSOFTW.NS",
"SWSOLAR.NS",
"SUMICHEM.NS",
"SPARC.NS",
"SUVENPHAR.NS",
"SWANENERGY.NS",
"SYRMA.NS",
"TBOTEK.NS",
"TVSSCS.NS",
"TANLA.NS",
"TTML.NS",
"TECHNOE.NS",
"TEJASNET.NS",
"RAMCOCEM.NS",
"TITAGARH.NS",
"TRIDENT.NS",
"TRIVENI.NS",
"TRITURBINE.NS",
"UCOBANK.NS",
"UTIAMC.NS",
"UJJIVANSFB.NS",
"USHAMART.NS",
"VGUARD.NS",
"VIPIND.NS",
"DBREALTY.NS",
"VTL.NS",
"VARROC.NS",
"MANYAVAR.NS",
"VIJAYA.NS",
"VINATIORGA.NS",
"WELCORP.NS",
"WELSPUNLIV.NS",
"WESTLIFE.NS",
"WHIRLPOOL.NS",
"ZEEL.NS",
"ZENSARTECH.NS",
"ECLERX.NS"
]

# Initialize a list to store DataFrames
data_frames = []

# Fetch data for each ticker symbol and store the close prices in the list
for ticker in ticker_symbols:
    try:
        data = yf.download(ticker, period="1y")
        close_prices = data[['Close']].rename(columns={'Close': ticker})
        data_frames.append(close_prices)
    except Exception as e:
        print(f"Unable to fetch data for {ticker}: {e}")
        # If unable to fetch data, create a DataFrame with 0 values
        dates = pd.date_range(end=pd.Timestamp.today(), periods=365)
        close_prices = pd.DataFrame({ticker: [0]*365}, index=dates)
        data_frames.append(close_prices)

# Concatenate all DataFrames along the columns
all_close_prices = pd.concat(data_frames, axis=1)

# Save the close prices to an Excel file
all_close_prices.to_excel("NSE_stocks_close_prices.xlsx")

print("Close prices for multiple NSE stocks for the last 1 year have been downloaded and saved to NSE_stocks_close_prices.xlsx")
