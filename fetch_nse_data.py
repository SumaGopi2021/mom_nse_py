import yfinance as yf
import pandas as pd

# Define the list of ticker symbols for multiple NSE stocks
ticker_symbols = [
    "AGI.NS",
"ASKAUTOLTD.NS",
"AARTIDRUGS.NS",
"AARTIPHARM.NS",
"ADVENZYMES.NS",
"AETHER.NS",
"AHLUCONT.NS",
"ALLCARGO.NS",
"AMIORG.NS",
"ANURAS.NS",
"PARKHOTELS.NS",
"ARVINDFASN.NS",
"ARVIND.NS",
"ASHOKA.NS",
"ASTRAMICRO.NS",
"AVALON.NS",
"AZAD.NS",
"BAJAJCON.NS",
"BAJAJELEC.NS",
"BAJAJHIND.NS",
"BALMLAWRIE.NS",
"BANCOINDIA.NS",
"BEPL.NS",
"BBL.NS",
"BLUEJET.NS",
"BOMDYEING.NS",
"BOROLTD.NS",
"BORORENEW.NS",
"CMSINFO.NS",
"CSBBANK.NS",
"CARTRADE.NS",
"CHOICEIN.NS",
"CIGNITITEC.NS",
"CONFIPET.NS",
"CYIENTDLM.NS",
"DCBBANK.NS",
"DCMSHRIRAM.NS",
"DCXINDIA.NS",
"DATAMATICS.NS",
"DELTACORP.NS",
"DEN.NS",
"DHANI.NS",
"DHANUKA.NS",
"DBL.NS",
"DISHTV.NS",
"DCAL.NS",
"DODLA.NS",
"DREAMFOLKS.NS",
"DUMMYSTAR.NS",
"DYNAMATECH.NS",
"EPL.NS",
"ESAFSFB.NS",
"EDELWEISS.NS",
"EMIL.NS",
"ELECTCAST.NS",
"ENTERO.NS",
"EPIGRAL.NS",
"EMBDL.NS",
"ETHOSLTD.NS",
"EVEREADY.NS",
"FDC.NS",
"FIEMIND.NS",
"FCL.NS",
"FORCEMOT.NS",
"FUSION.NS",
"GHCL.NS",
"GMMPFAUDLR.NS",
"GABRIEL.NS",
"GANESHHOUC.NS",
"GRWRHITECH.NS",
"GATEWAY.NS",
"GLS.NS",
"GOCOLORS.NS",
"GOKEX.NS",
"GOPAL.NS",
"GRAVITA.NS",
"GREAVESCOT.NS",
"GREENPANEL.NS",
"GREENPLY.NS",
"GUJALKALI.NS",
"GULFOILLUB.NS",
"HGINFRA.NS",
"HAPPYFORGE.NS",
"HARSHA.NS",
"HATHWAY.NS",
"HCG.NS",
"HEIDELBERG.NS",
"HEMIPROP.NS",
"HERITGFOOD.NS",
"HIKAL.NS",
"HCC.NS",
"HNDFDS.NS",
"HINDOILEXP.NS",
"HINDWAREAP.NS",
"IFBIND.NS",
"IIFLCAPS.NS",
"ITDCEM.NS",
"IDEAFORGE.NS",
"IMAGICAA.NS",
"INDIAGLYCO.NS",
"IPL.NS",
"INDIASHLTR.NS",
"IMFA.NS",
"INDIGOPNTS.NS",
"ICIL.NS",
"INFIBEAM.NS",
"INGERRAND.NS",
"INOXGREEN.NS",
"IONEXCHANG.NS",
"ISGEC.NS",
"JKIL.NS",
"JKPAPER.NS",
"JTEKTINDIA.NS",
"JTLIND.NS",
"JAIBALAJI.NS",
"JAICORPLTD.NS",
"JISLJALEQS.NS",
"JAMNAAUTO.NS",
"JSFB.NS",
"JINDWORLD.NS",
"JCHAC.NS",
"JUNIPER.NS",
"JLHL.NS",
"KRBL.NS",
"KSL.NS",
"KTKBANK.NS",
"KSCL.NS",
"KESORAMIND.NS",
"KIRLPNU.NS",
"KOLTEPATIL.NS",
"LMW.NS",
"LTFOODS.NS",
"LANDMARK.NS",
"LXCHEM.NS",
"IXIGO.NS",
"LLOYDSENGG.NS",
"LUXIND.NS",
"MOIL.NS",
"MSTCLTD.NS",
"MTARTECH.NS",
"MHRIL.NS",
"MAHLOG.NS",
"MAITHANALL.NS",
"MANINFRA.NS",
"MARKSANS.NS",
"MEDPLUS.NS",
"MIDHANI.NS",
"BECTORFOOD.NS",
"MUTHOOTMF.NS",
"NEOGEN.NS",
"NESCO.NS",
"NIITMTS.NS",
"NOCIL.NS",
"NRBBEARING.NS",
"NFL.NS",
"NAVA.NS",
"NAZARA.NS",
"NEULANDLAB.NS",
"ODIGMA.NS",
"OPTIEMUS.NS",
"ORCHPHARMA.NS",
"ORIENTCEM.NS",
"ORIENTELEC.NS",
"ORISSAMINE.NS",
"PGEL.NS",
"PTC.NS",
"PAISALO.NS",
"PARADEEP.NS",
"PARAS.NS",
"PATELENG.NS",
"POLYPLEX.NS",
"POWERMECH.NS",
"PRICOLLTD.NS",
"PRINCEPIPE.NS",
"PGHL.NS",
"PRUDENT.NS",
"PURVA.NS",
"RAIN.NS",
"RALLIS.NS",
"RAMKY.NS",
"RATEGAIN.NS",
"REDTAPE.NS",
"RELINFRA.NS",
"RELIGARE.NS",
"RESPONIND.NS",
"RBA.NS",
"ROLEXRINGS.NS",
"ROSSARI.NS",
"SAFARI.NS",
"KALAMANDIR.NS",
"SAMHI.NS",
"SANDUMA.NS",
"SANGHIIND.NS",
"SANGHVIMOV.NS",
"SANSERA.NS",
"SARDAEN.NS",
"SENCO.NS",
"SEQUENT.NS",
"SHARDAMOTR.NS",
"SHAREINDIA.NS",
"SFL.NS",
"SHILPAMED.NS",
"SBCL.NS",
"SHRIPISTON.NS",
"SINDHUTRAD.NS",
"SOUTHBANK.NS",
"SPANDANA.NS",
"STARCEMENT.NS",
"SSWL.NS",
"STLTECH.NS",
"STAR.NS",
"STYLAMIND.NS",
"SUBROS.NS",
"SUDARSCHEM.NS",
"SULA.NS",
"SUNFLAG.NS",
"SUNTECK.NS",
"SUPRAJIT.NS",
"SPLPETRO.NS",
"SUPRIYA.NS",
"SURYAROSNI.NS",
"SYMPHONY.NS",
"TARC.NS",
"TCIEXP.NS",
"TDPOWERSYS.NS",
"TEAMLEASE.NS",
"TIIL.NS",
"TEGA.NS",
"TEXRAIL.NS",
"TIRUMALCHM.NS",
"THOMASCOOK.NS",
"TI.NS",
"TIMETECHNO.NS",
"TIPSMUSIC.NS",
"UTKARSHBNK.NS",
"VMART.NS",
"VSTIND.NS",
"WABAG.NS",
"VAIBHAVGBL.NS",
"VEEDOL.NS",
"VENKEYS.NS",
"VENUSPIPES.NS",
"VESUVIUS.NS",
"VOLTAMP.NS",
"WELENT.NS",
"WSTCSTPAPR.NS",
"WOCKPHARMA.NS",
"WONDERLA.NS",
"YATHARTH.NS",
"ZENTEC.NS",
"ZYDUSWELL.NS",
"EMUDHRA.NS"
]

# Initialize an empty DataFrame to store close prices
close_prices = pd.DataFrame()

# Fetch data for each ticker symbol and store the close prices in the DataFrame
for ticker in ticker_symbols:
    try:
        data = yf.download(ticker, period="1y")
        close_prices[ticker] = data['Close']
    except Exception as e:
        print(f"Unable to fetch data for {ticker}: {e}")
        # If unable to fetch data, fill the column with 0
        close_prices[ticker] = 0

# Save the close prices to an Excel file
close_prices.to_excel("NSE_stocks_close_prices.xlsx")

print("Close prices for multiple NSE stocks for the last 1 year have been downloaded and saved to NSE_stocks_close_prices.xlsx")
